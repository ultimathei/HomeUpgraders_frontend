.button {
  --bg-color: var(--hu-color--primary);
  --color: var(--hu-color--primary--contrast);
  --font-size: var(--hu-font-size--m);
  background-color: var(--bg-color);
  border: none;
  border-radius: 4px;
  color: var(--color);
  cursor: pointer;
  padding: 0.25em 1em;
  font-size: var(--font-size);
  text-transform: uppercase;
  
  &:is(:hover, :focus, :focus-within) {
    --bg-color: var(--hu-color--primary--darker);
  }
  &:disabled {
    --bg-color: var(--hu-color--primary--disabled);
    cursor: not-allowed;
    opacity: 0.6;
  }

  $types: 'primary', 'secondary';
  @mixin size-variations ($type: '') {
    $sizes: 's', 'm', 'l', 'xl';
    @each $size in $sizes {
      &--#{$size} {
        @extend .button#{$type};
        @if $type == '' {
          --font-size: var(--hu-font-size--#{$size});
        }
        @else {
          @extend .button--#{$size};
        }
      }
    }
  }

  @include size-variations();
  &--primary {
    @extend .button;
    @include size-variations('--primary');
  }
  &--secondary {
    @extend .button;
    @include size-variations('--secondary');

    --bg-color: var(--hu-color--secondary);
    --color: var(--hu-color--secondary--contrast);

    &:is(:hover, :focus, :focus-within) {
      --bg-color: var(--hu-color--secondary--darker);
    }
    &:disabled {
      --bg-color: var(--hu-color--secondary--disabled);
    }
  }
}
